<h2>jsconsole</h2>

<p>A nice javascript console/repl as ember-addon.</p>


<h3>A simple js-console</h3>

<pre>\{{js-console}}</pre>

{{js-console}}



<h3>Demo with custom autocomplete</h3>

<p>This is a simple autocomplete, with variable names like <code>home</code> and
<code>help</code>.</p>

<pre>\{{js-console autocomplete=autocomplete}}</pre>

{{js-console autocomplete=autocomplete}}

<p>
and, you neet to create an <code>autocomplete</code> function in your controller:
</p>

<pre>import Ember from 'ember';

export default Ember.Controller.extend({
  autocomplete(cm) {
    let currentWord = cm.getTokenAt(cm.getCursor()).string;
    let initial_list = ['home', 'help'];

    let list = initial_list.filter(function(e) {
      return (e.indexOf(currentWord) > -1);
    });

    let endCursor = CodeMirror.Pos(cm.getCursor().line, cm.getCursor().ch - currentWord.length);
    return {from: cm.getCursor(), to: endCursor, list: list};
  }


});</pre>


<h3>Demo with custom eval function</h3>


<pre>\{{js-console eval_function=my_eval}}</pre>

{{js-console eval_function=my_eval}}

<p>
and, you neet to create a function in your controller:
</p>

<pre>import Ember from 'ember';

export default Ember.Controller.extend({
  my_eval(code) {
    var out = {};

    alert("Your code: " + code);

    try {
      out.completionValue = eval.call(null, code);
    } catch(e) {
      out.error = true;
      out.completionValue = e;
      out.recoverable = (e instanceof SyntaxError && e.message.match('^Unexpected (token|end)'));
    }
    return out;
  }
});</pre>
